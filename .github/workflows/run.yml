name: 'Test'
on: [pull_request, push]

jobs:
  swig:
    runs-on: ubuntu-latest
    name: Generate the SWIG wrappers ${{ matrix.no_async }}

    strategy:
      fail-fast: false
      matrix:
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: mmomtchev/setup-swig@main
      with:
        branch: jse

    - name: Verify SWIG
      run: swig-jse -version

    - name: Run SWIG to generated the wrappers
      run: npm run swig
      env:
        SWIG_FEATURES: ${{ matrix.no_async && '-DNO_ASYNC' || '' }}

    - name: Upload SWIG-generated wrappers
      uses: actions/upload-artifact@v4
      with:
        name: swig-generated${{ matrix.no_async }}
        path: |
          build/*


  swig-debug:
    runs-on: ubuntu-latest
    name: Generate the SWIG wrappers (instrumented)

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: mmomtchev/setup-swig@main
      with:
        branch: jse

    - name: Verify SWIG
      run: swig-jse -version

    - name: Run SWIG to generated the wrappers
      run: npm run swig:debug

    - name: Upload SWIG-generated wrappers
      uses: actions/upload-artifact@v4
      with:
        name: swig-generated-debug
        path: |
          build/*

  
  build-native:
    runs-on: ${{ matrix.platform }}
    name: Build native ${{ matrix.platform }}${{ matrix.no_async }}
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the SWIG-generated wrappers
      uses: actions/download-artifact@v4
      with:
        name: swig-generated${{ matrix.no_async }}
        path: build
        
    - name: Install dependencies
      run: npm install --ignore-scripts

    - name: Build the native version
      run: npx node-gyp configure build
      env:
        GYP_DEFINES: ${{ matrix.no_async && 'no_async' || '' }}
    
    - name: Upload native artifact ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      with:
        name: native-${{ matrix.platform }}${{ matrix.no_async }}
        path: |
          build/*


  build-wasm:
    runs-on: ubuntu-latest
    name: Build WASM ${{ matrix.no_async }}
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Setup emscripten
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: 3.1.53
        
    - name: Verify emscripten
      run: emcc -v

    - name: Download the SWIG-generated wrappers
      uses: actions/download-artifact@v4
      with:
        name: swig-generated${{ matrix.no_async }}
        path: build

    - name: Install dependencies
      run: npm install --ignore-scripts

    - name: Build the WASM version
      run: CC=emcc CXX=em++ npx node-gyp configure build --target_platform=emscripten
      env:
        GYP_DEFINES: ${{ matrix.no_async && 'no_async' || '' }}
    
    - name: Upload WASM artifact
      uses: actions/upload-artifact@v4
      with:
        name: wasm${{ matrix.no_async }}
        path: |
          build/*


  build-asan:
    runs-on: ubuntu-latest
    name: Build ASAN instrumented version
    needs: swig-debug

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the SWIG-generated wrappers (instrumented)
      uses: actions/download-artifact@v4
      with:
        name: swig-generated-debug
        path: build
        
    - name: Install dependencies
      run: npm install --ignore-scripts

    - name: Build the native version
      run: npx node-gyp configure build --debug --enable_asan
    
    - name: Upload native artifact (ASAN instrumented)
      uses: actions/upload-artifact@v4
      with:
        name: native-asan
        path: |
          build/*


  build-codecov:
    runs-on: ubuntu-latest
    name: Build code coverage instrumented version
    needs: swig-debug

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the SWIG-generated wrappers (instrumented)
      uses: actions/download-artifact@v4
      with:
        name: swig-generated-debug
        path: build
        
    - name: Install dependencies
      run: npm install --ignore-scripts

    - name: Build the native version
      run: npx node-gyp configure build --debug --enable_coverage
    
    - name: Upload native artifact (code coverage instrumented)
      uses: actions/upload-artifact@v4
      with:
        name: native-codecov
        path: |
          build/*


  test:
    runs-on: ${{ matrix.platform }}
    name: Test ${{ matrix.platform }}${{ matrix.no_async }}
    needs: [ build-wasm, build-native ]

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the native artifact ${{ matrix.platform }}
      uses: actions/download-artifact@v4
      with:
        name: native-${{ matrix.platform }}${{ matrix.no_async }}
        path: build

    - name: Download the WASM artifact
      uses: actions/download-artifact@v4
      with:
        name: wasm${{ matrix.no_async }}
        path: build

    - name: Install dependencies
      run: npm install --ignore-scripts
    
    - name: Run the Node.js tests
      run: npm run test:nodejs
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}

    - name: Run the browser tests
      uses: coactions/setup-xvfb@v1
      with:
        run: npm run test:browser
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}

    - name: Test building the webpack project
      run: npm run build:webpack
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}


  asan:
    runs-on: ubuntu-latest
    name: Run asan
    needs: [ build-asan, build-wasm ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Download the WASM artifact
      uses: actions/download-artifact@v4
      with:
        name: wasm
        path: build

    - name: Download the ASAN instrumented artifact
      uses: actions/download-artifact@v4
      with:
        name: native-asan
        path: build

    - name: Install dependencies
      run: npm install --ignore-scripts
    
    - name: Run the Node.js tests
      run: npm run test:nodejs
      env:
        LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libasan.so.6
        LSAN_OPTIONS: suppressions=${{ github.workspace }}/test/napi-leaks-suppression.txt


  codecov:
    runs-on: ubuntu-latest
    name: Run code coverage
    needs: [ build-codecov, build-wasm ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the WASM artifact
      uses: actions/download-artifact@v4
      with:
        name: wasm
        path: build

    - name: Download the code coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: native-codecov
        path: build

    - name: Install dependencies
      run: npm install --ignore-scripts
    
    - name: Run the Node.js tests
      run: npx c8 npm run test:nodejs

    - name: Collect code coverage
      run: |
        npm run gcov
        npm run lcov

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: coverage
        slug: mmomtchev/swig-napi-example-project
